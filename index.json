[{"categories":["authentication","access control","SSO","Best Practices"],"contents":"I’ve been arguing for years that we in information security aren’t doing anyone any favors when we demand that people use for passwords something impossible to remember, then we demand that they remember it, and then we insist that, for God’s sake, they never write it down.\nAnd as if we weren’t bad enough, soon regulators came along and made it worse: “Rotate your passwords every 90 days,” they sagely intoned, “to make them more secure.”\nThey’re wrong.\nForced password rotation, or password expiry, is just a big stupid thing to do. The problem now is convincing auditors that you’re OK to stop doing it — overcoming dogmatic adherence to a dumb thing is not easy.\nBut it’s possible.\nHere’s how to justify Password-Expiry-Only-on-Suspicion-of-Compromise to your auditors:\nLet Me Sum Up: NIST Special Publication 800–63B guidance\nNational Cyber Security Center guidance\nChastney On Password Expiry\nCranor on Password Expiry\nHow I Got Here The topic came up for me again recently when revamping the information security program at a financial institution. This is a place that has gone to some pretty reasonable lengths to protect themselves: They know who their users are, and what they are permitted to do, on what devices, with what configurations, from which locations. They’ve got well-managed machines, and Single-Sign On, and they require push or XOTP-based second-factor authentication for everything they use. And sometimes, they require something you know, and two things you have.\nAnd now, here was a regulator asking them to audit regularly not just what was accessed, and when, and by whom, and whether each user was Kosher, but also, the last time the person’s password was changed.\nYou know, for security.\nThe chief engineer was incredulous. “Rotate passwords? We get a new password every time.”\nAnd even if we didn’t — even if we just had single-factor — rotating passwords is just \u0026hellip; Stupid.\nAs I often do when I’m apoplectic, I tweeted.\nAnd, lo! wisdom arrives minutes later from @wendynather:\nHomeopathy for your Network The argument about whether changing passwords is more secure is also far less established scientific fact than simple common belief. Researchers at the School of Computer Science, Carlton University, Ottawa, state that\n “The historical idea is that [regular password changes] increases security — although the implied gain has never been quantified.”\n Rotating passwords: an expensive placebo security measure. Indeed, the disruption, and the number of man-hours wasted and user frustration as they need to do password resets associated with their needless password updates make this exercise a significant disruption to our business with no evidence of increased security.\nIt is simply expensive effort to achieve a placebo security measure. It’s homeopathic enterprise security. It’s the TSA for your network.\nI’ll go you one farther: I argue that not changing the static password is more secure than changing it every 90 days.\nThat’s because if — like ours — the static password is strong and secure (in our case, it uses at least ten characters that must include mixed upper and lower case, and at least one number and one special character), then forcing users to remember another such inherently un-memorable password actually encourages bad practices such as re-using old passwords, making predictable variations from existing passwords, or writing them down.\nThis is not a crazy idea, or one that is out of left field. It’s certainly not original. And it’s taking hold in some pretty conservative places.\nIn 2016, Lorrie Cranor, Chief Technologist of the Federal Trade Commission wrote in an official FTC publication,\n “there is a lot of evidence to suggest that users who are required to change their passwords frequently select weaker passwords to begin with, and then change them in predictable ways that attackers can guess easily. Unless there is reason to believe a password has been compromised or shared, requiring regular password changes may actually do more harm than good in some cases.”\n Then Chris Swan tweeted something that would make my life significantly better:\nChris (if you don’t know him you should, because it is nice to have at least one friend who lives five years in the future) is talking about NIST Special Publication 800–63B guidance in Section 5.1.1.2, “Memorized Secret Verifiers” — that’s “password” to you:\n “Verifiers SHOULD NOT require memorized secrets to be changed arbitrarily (e.g., periodically). However, verifiers SHALL force a change if there is evidence of compromise of the authenticator.” [Emphasis in original]\n A year earlier, the UK Government’s National Cyber Security Centre reached the same conclusion, saying,\n “Only ask users to change their passwords on indication of suspicion of compromise.”\n Chris pointed me to a great article by Graham Chastney, a technologist at Chris’ firm, DXC, that Chastney wrote when the UK NCSC (then CESG) guidance mentioned above came out.\nThat article is worth a read, but don’t miss a nice related piece on Chastney’s personal blog, The Four Ages Of Remembering a New Password.\nRegulators Oh, by the way: when dealing with regulators we speak with, it’s nice to deal with woke ones. When I ran all this by them, I was delighted to see that they agreed, and that they had already formed a position on the matter:\n “[We are] in fact familiar with the NIST guidance which you are citing. While we still do recommend that passwords be changed periodically we no longer require such changes to be made on a routine basis.”\n As the kids a generation ago used to say, “Boo-ya.”\nUnless you’re dealing with PCI-DSS. I’d argue the above is a compensating control for their particular brand of jackassery, and would have hoped that any reasonable auditor would recognize that — did you see what I did there, using the word “reasonable” and the acronym “PCI-DSS” within 100 feet of one another? — but to paraphrase Dan, it’s hard not to suck deep, deep down when you are PCI-DSS.\n","permalink":"https://fuzztechnology.com/blog/post-2/","tags":["phishing","ransomware"],"title":"Stop Rotating Your Passwords"},{"categories":["phishing","ransomware","Security Awareness Training"],"contents":"Successful phishing attacks - tricking your employees into clicking a link and then taking an action, such as providing information to a fake web page - is the primary vector for ransomware infections. But it\u0026rsquo;s really not that simple. Ransomware exploits weaknesses in training, but also in how you have architected and executed on your overall information technology and information security fabric. Even if you removed phishing completely (which is hard), ransomware would still present a threat.\nSo when vendors tell you that the \u0026ldquo;solution\u0026rdquo; to phishing is to let them mount mock phuishing attacks against your employees, take it with a grain of salt. Sure, used prudently, phishing exercises and tests can give you data about the state of preparedness your company has to withstand a phishing campaign. But it is important to remember that readiness here doesn\u0026rsquo;t just mean \u0026ldquo;Will my people click the link?\u0026rdquo; It also means very important things such as, \u0026ldquo;Can my systems stop the link from reaching my people?\u0026rdquo; and \u0026ldquo;If my people do click a link, how good are we at defending against what happens next?\u0026rdquo;\nAnother reason not to put too much stock in phishing testing is that unless it\u0026rsquo;s done well, you\u0026rsquo;ll be teaching the wrong lessons. The companies that conduct these drills will tell you that your fake phishing test should be as ruthlessly real as the real thing, or else it\u0026rsquo;s not worth much. \u0026ldquo;Hackers,\u0026rdquo; they\u0026rsquo;ll tell you, \u0026ldquo;won\u0026rsquo;t pull any punches, so neither should you.\u0026rdquo;\nYes and no. The last thing you want to do is set up an adversarial relationship between your employees and your information security or information technology leadership and teams. And that\u0026rsquo;s what you do when those teams and leaders send out that clever phishing test - the one about \u0026ldquo;Click here for information about this year\u0026rsquo;s Christmas bonus.\u0026rdquo;\nIs that kind of thing a realistic phish? You betcha. Might hackers actually try something like that? Less often than you\u0026rsquo;d think, but, sure.\nThe difference, though, is that the ransomware criminals don\u0026rsquo;t have to work with Bob in accounting after they mount such an offensive trick, one that plays on Bob\u0026rsquo;s desires and hopes, and crushes them like a grape.\nThe best defenses against phishing are, we learn again and again:\n Awareness training Show your employees how to spot fakes, from a general sense of diligence, to mousing over links, to matching URLs in the sender address field. Do this regularly. Empowerment Make sure your employees know that they can ask questions and get help for the asking - no one is going to say they\u0026rsquo;re asking a dumb question. By supporting employees with help to make the right decision about \u0026ldquo;To click or not to click\u0026rdquo;, you reduce the numbers who will make the wrong choice. Good filtering and mail hygiene They can\u0026rsquo;t click it if it doesn\u0026rsquo;t reach their inbox. Hardware tokens it\u0026rsquo;s not a myth: Google reduced to zero the number of its employes successfully phished after deploying hardware tokens. Sure, your employee might click on a link to out1ook.com, but a hardware token won\u0026rsquo;t authenticate to the wrong site. Thinking past the phish Should the worst happen, and an employee clicks on a fake link and gets infected, what\u0026rsquo;s going to happen? Is your organization ready to detect it? Have you got your backups in order, and your restoration procedures tested regularly? Are you properly logging outbound DNS requests and other critical breadcrumbs so your incident responders can figure out what\u0026rsquo;s going on and stop the bleeding quickly?  Paying attention to these issues, and working on the long game as opposed to the easy fix, is the best way to combat phishing.\n","permalink":"https://fuzztechnology.com/blog/post-4/","tags":["phishing","ransomware"],"title":"Tricking Your Team Isn't The Answer"},{"categories":["Supply Chain Risk"],"contents":"Note: I spoke on this topic in September, 2021 at 44CON and you can watch the video here.\nThird Party Risk (3PR) conversations have been center-tile on Buzzword Bingo cards for a few years now, but the way most firms approach 3PR hasn’t been effective at quantifying the risk a third-party provider actually brings to an organization. With several damaging software supply chain breaches in the course of a couple of months, executives are trying to understand how we got into this mess, and how we get out of it.\n3PR methodologies vary, but they’re mainly driven by compliance or procurement teams, based on a playbook that in effect seeks to determine whether a third party service provider will introduce risk by being “less secure” or “less compliant” than the policies of the company buying the service.\nThere’s a lot wrong with that assumption, beginning with the practice of handing vendors a spreadsheet groaning under the weight of baseline technology configuration questions. The idea is that companies ticking the YES box more often than not can give assurance of how “secure” or “trustworthy” the vendor is to the auditors handing out the spreadsheet. These auditors often have no information security subject matter expertise - and these days, some of the checklists themselves have been written by accountants.\nWe’ve thus reduced “trust” to a checklist almost entirely unrelated to trustworthiness. Rather than asking questions that highlight the risk a potential supplier might expose us to, we seem to have accepted that “trust” seems to be a product of compliance with tenets of information security configuration; ignoring that these tenets have changed significantly over the past decade as the world has moved its delivery systems from on-prem to the Cloud, and its development methodologies from Waterfall to Agile.\nA more recent gambit has been to require a System and Organization Controls (SOC) 2 Type 2 certification. SOC2 provides a highly valuable set of data in an easy to consume form, but even its creators will tell you it was never intended to serve as the sole criteria for a risk-based decision.\nHere’s the story of a vendor who does things right: Their agent is written in a memory-safe language; it can only send but not receive data; in building it, all code commits must be signed by the developer with a U2F touch; all pull requests signed by the reviewer; and the source code is available for inspection by the customer. That’s just what any security-conscious customer would demand.\nA prospect recently disqualified this vendor for not having a SOC2 certification.\nA SOC 2 should start, but not decide, the conversation. It should be one consideration in assessing the risk a provider brings.\nWhat Can We Trust?\nIn his seminal 1984 paper, Reflections on Trusting Trust, Ken Thompson boiled down a truism of the software world: “You can\u0026rsquo;t trust code that you did not totally create yourself.”\nWhether you’re just seeking to outsource what feels easiest or cheapest, or you’re formally Wardley-Mapping to segregate the high-value core competencies of your company from commodity services you need to get to market, most companies are taking on supply-chain risk by using a lot of software as a service (SaaS).\nIt is an important distinction that, “Commodity” doesn’t mean, “Unimportant.” Some commodities in the business supply-chain include real-time chat, Single-Sign On and identity store, billing, expense management, accounting, trouble ticketing, work planning, and other very sensitive things - not to mention productivity, email, and videoconference. That echo in your mind is of newscasts reporting breaches of providers in nearly all of these categories, by the by.\nAll these Software as a Service offerings are the repositories in which we store our business plans, treasure maps to broken things in our organizations, confidential conversations, and, oh yes: masses of our customers’ private information.\nLearning the difference between those that were breached, and those that weren’t yet, has actually always been the point of the exercise. But none of the spreadsheet cat-rodeos surfaced the risk provided by Zoom, or Citrix, or SolarWinds, or CodeCov brought into the center of our networks.\nThompson’s admonition is really key: the only way to view 3PR is to view it as, “If we built this service ourselves, how would we measure the risk it exposes our company to?”\nNow think of the last time you bought a SaaS product. Chances are, a business team set the deliverables, the legal team discussed the contract terms, and only after all that was done did the compliance and information security team get brought into the conversation. Odds are, engineering wasn’t consulted at all.\nRecognizing - at the level of board, C-Suite, and company management - that outsourcing commodity tasks is a strategic operational reality is very important. With recognition that the most dangerous place in any company is between the CFO and an OPEX cut, a preliminary security speed bump at the start of the bake-off can prevent those other teams from wasting their time.\nIf the SaaS provider can’t satisfactorily answer seven to 10 basic questions about their development and deployment pipeline, about their software development lifecycle, about their use of cryptographic proofs as attestation of authorship, their use of encryption, and the like, then here’s the thing: they either don’t know or don’t care about security enough to provide what are some very basic protections in today’s environment.\nIf they fail this first gate, both sides are saved the long homeopathic consult in which we once again convince ourselves that dilution of security equals increased strength, as we wrassle with a 300-row questionnaire that neither side wants to endure.\nSo What Should We Ask?\nUnlike the spreadsheets we have been using that tell you about specific configuration, the answers to the following ten questions can help engineering and IT professionals at your company understand truly the risk this SaaS vendor brings to your business:\n Do you encrypt all customer data in transit, and at rest within your systems? Does your portal support login via SAML? Or at the least, “Do you support non-SMS MFA?” (if they don’t do the former, they’d better do the latter) Does your company require its software developers and engineers accessing your own production and non-production environments to use a VPN? Is that VPN itself protected by SAML- Oauth, etc.- based Single Sign-on and Secure Multi-Factor Authentication? Do any of your internal systems use static credentials? How do you manage secrets in your production and non-production environments? Do you have a named executive responsible for security? What is their title, and to whom in the organization do they report? Does your company require all engineers to undergo regular secure coding training? Do your engineers use a linter? Do you perform static security and dependency scanning on your codebase?  There\u0026rsquo;s also one question that you can ask that can cut to the chase with the engineering team:\n Can anyone in your company use a laptop to push code to production?  (the more polite way to ask this is, \u0026ldquo;At what level on the SLSA Framework does your company sit?\u0026quot;)\nNo Guarantees\nGetting past these questions with satisfactory answers isn’t a guarantee they’ll pass the full security audit that comes later, but it’s a good indication we’re not wasting our time continuing talks. Notice that, just as being at Level 3 on the SLSA scale isn’t an automatic qualifier, being at Level 0 is not an automatic disqualifier; in the comments the company can state where they are on their journey - maybe they’ve made a ton of progress in the past year.\nAnswering “No” to more than a couple of these questions, though, means, no, we’re not going to get to your SOC certification or the spreadsheet rodeo, or read your descriptions of how you’re one of the Best Places to Work in Peoria, because your company is simply not a candidate to sell to ours.\n","permalink":"https://fuzztechnology.com/blog/post-3/","tags":["Third Party Risk","Supply Chain","CI-CD","Engineering Best Practices"],"title":"The Anti-Checklist Manifesto: Spreadsheets and 3PR"}]